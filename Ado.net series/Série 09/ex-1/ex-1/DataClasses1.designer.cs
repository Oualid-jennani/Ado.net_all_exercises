#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ex_1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="prdComdb")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void Insertclient(client instance);
    partial void Updateclient(client instance);
    partial void Deleteclient(client instance);
    partial void Insertcommande(commande instance);
    partial void Updatecommande(commande instance);
    partial void Deletecommande(commande instance);
    partial void InsertligneCommande(ligneCommande instance);
    partial void UpdateligneCommande(ligneCommande instance);
    partial void DeleteligneCommande(ligneCommande instance);
    partial void Insertproduit(produit instance);
    partial void Updateproduit(produit instance);
    partial void Deleteproduit(produit instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::ex_1.Properties.Settings.Default.prdComdbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<client> client
		{
			get
			{
				return this.GetTable<client>();
			}
		}
		
		public System.Data.Linq.Table<commande> commande
		{
			get
			{
				return this.GetTable<commande>();
			}
		}
		
		public System.Data.Linq.Table<ligneCommande> ligneCommande
		{
			get
			{
				return this.GetTable<ligneCommande>();
			}
		}
		
		public System.Data.Linq.Table<produit> produit
		{
			get
			{
				return this.GetTable<produit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
	public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _numC;
		
		private string _nom;
		
		private string _prenom;
		
		private string _email;
		
		private EntitySet<commande> _commande;

        public override string ToString()
        {
            return this.nom + " " + this.prenom;
        }
        #region Définitions de méthodes d'extensibilité
        partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumCChanging(short value);
    partial void OnnumCChanged();
    partial void OnnomChanging(string value);
    partial void OnnomChanged();
    partial void OnprenomChanging(string value);
    partial void OnprenomChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
		
		public client()
		{
			this._commande = new EntitySet<commande>(new Action<commande>(this.attach_commande), new Action<commande>(this.detach_commande));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numC", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short numC
		{
			get
			{
				return this._numC;
			}
			set
			{
				if ((this._numC != value))
				{
					this.OnnumCChanging(value);
					this.SendPropertyChanging();
					this._numC = value;
					this.SendPropertyChanged("numC");
					this.OnnumCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nom", DbType="VarChar(30)")]
		public string nom
		{
			get
			{
				return this._nom;
			}
			set
			{
				if ((this._nom != value))
				{
					this.OnnomChanging(value);
					this.SendPropertyChanging();
					this._nom = value;
					this.SendPropertyChanged("nom");
					this.OnnomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prenom", DbType="VarChar(30)")]
		public string prenom
		{
			get
			{
				return this._prenom;
			}
			set
			{
				if ((this._prenom != value))
				{
					this.OnprenomChanging(value);
					this.SendPropertyChanging();
					this._prenom = value;
					this.SendPropertyChanged("prenom");
					this.OnprenomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_commande", Storage="_commande", ThisKey="numC", OtherKey="numC")]
		public EntitySet<commande> commande
		{
			get
			{
				return this._commande;
			}
			set
			{
				this._commande.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_commande(commande entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_commande(commande entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.commande")]
	public partial class commande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _numCom;
		
		private System.Nullable<System.DateTime> _dateCom;
		
		private System.Nullable<short> _numC;
		
		private EntitySet<ligneCommande> _ligneCommande;
		
		private EntityRef<client> _client;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumComChanging(short value);
    partial void OnnumComChanged();
    partial void OndateComChanging(System.Nullable<System.DateTime> value);
    partial void OndateComChanged();
    partial void OnnumCChanging(System.Nullable<short> value);
    partial void OnnumCChanged();
    #endregion
		
		public commande()
		{
			this._ligneCommande = new EntitySet<ligneCommande>(new Action<ligneCommande>(this.attach_ligneCommande), new Action<ligneCommande>(this.detach_ligneCommande));
			this._client = default(EntityRef<client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numCom", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short numCom
		{
			get
			{
				return this._numCom;
			}
			set
			{
				if ((this._numCom != value))
				{
					this.OnnumComChanging(value);
					this.SendPropertyChanging();
					this._numCom = value;
					this.SendPropertyChanged("numCom");
					this.OnnumComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCom", DbType="Date")]
		public System.Nullable<System.DateTime> dateCom
		{
			get
			{
				return this._dateCom;
			}
			set
			{
				if ((this._dateCom != value))
				{
					this.OndateComChanging(value);
					this.SendPropertyChanging();
					this._dateCom = value;
					this.SendPropertyChanged("dateCom");
					this.OndateComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numC", DbType="SmallInt")]
		public System.Nullable<short> numC
		{
			get
			{
				return this._numC;
			}
			set
			{
				if ((this._numC != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumCChanging(value);
					this.SendPropertyChanging();
					this._numC = value;
					this.SendPropertyChanged("numC");
					this.OnnumCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commande_ligneCommande", Storage="_ligneCommande", ThisKey="numCom", OtherKey="numCom")]
		public EntitySet<ligneCommande> ligneCommande
		{
			get
			{
				return this._ligneCommande;
			}
			set
			{
				this._ligneCommande.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_commande", Storage="_client", ThisKey="numC", OtherKey="numC", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.commande.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.commande.Add(this);
						this._numC = value.numC;
					}
					else
					{
						this._numC = default(Nullable<short>);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ligneCommande(ligneCommande entity)
		{
			this.SendPropertyChanging();
			entity.commande = this;
		}
		
		private void detach_ligneCommande(ligneCommande entity)
		{
			this.SendPropertyChanging();
			entity.commande = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ligneCommande")]
	public partial class ligneCommande : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _numCom;
		
		private short _numP;
		
		private System.Nullable<short> _qt;
		
		private EntityRef<commande> _commande;
		
		private EntityRef<produit> _produit;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumComChanging(short value);
    partial void OnnumComChanged();
    partial void OnnumPChanging(short value);
    partial void OnnumPChanged();
    partial void OnqtChanging(System.Nullable<short> value);
    partial void OnqtChanged();
    #endregion
		
		public ligneCommande()
		{
			this._commande = default(EntityRef<commande>);
			this._produit = default(EntityRef<produit>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numCom", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short numCom
		{
			get
			{
				return this._numCom;
			}
			set
			{
				if ((this._numCom != value))
				{
					if (this._commande.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumComChanging(value);
					this.SendPropertyChanging();
					this._numCom = value;
					this.SendPropertyChanged("numCom");
					this.OnnumComChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numP", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short numP
		{
			get
			{
				return this._numP;
			}
			set
			{
				if ((this._numP != value))
				{
					if (this._produit.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnnumPChanging(value);
					this.SendPropertyChanging();
					this._numP = value;
					this.SendPropertyChanged("numP");
					this.OnnumPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_qt", DbType="SmallInt")]
		public System.Nullable<short> qt
		{
			get
			{
				return this._qt;
			}
			set
			{
				if ((this._qt != value))
				{
					this.OnqtChanging(value);
					this.SendPropertyChanging();
					this._qt = value;
					this.SendPropertyChanged("qt");
					this.OnqtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="commande_ligneCommande", Storage="_commande", ThisKey="numCom", OtherKey="numCom", IsForeignKey=true)]
		public commande commande
		{
			get
			{
				return this._commande.Entity;
			}
			set
			{
				commande previousValue = this._commande.Entity;
				if (((previousValue != value) 
							|| (this._commande.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._commande.Entity = null;
						previousValue.ligneCommande.Remove(this);
					}
					this._commande.Entity = value;
					if ((value != null))
					{
						value.ligneCommande.Add(this);
						this._numCom = value.numCom;
					}
					else
					{
						this._numCom = default(short);
					}
					this.SendPropertyChanged("commande");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_ligneCommande", Storage="_produit", ThisKey="numP", OtherKey="numP", IsForeignKey=true)]
		public produit produit
		{
			get
			{
				return this._produit.Entity;
			}
			set
			{
				produit previousValue = this._produit.Entity;
				if (((previousValue != value) 
							|| (this._produit.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._produit.Entity = null;
						previousValue.ligneCommande.Remove(this);
					}
					this._produit.Entity = value;
					if ((value != null))
					{
						value.ligneCommande.Add(this);
						this._numP = value.numP;
					}
					else
					{
						this._numP = default(short);
					}
					this.SendPropertyChanged("produit");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.produit")]
	public partial class produit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _numP;
		
		private string _libelle;
		
		private System.Nullable<decimal> _pu;
		
		private EntitySet<ligneCommande> _ligneCommande;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnumPChanging(short value);
    partial void OnnumPChanged();
    partial void OnlibelleChanging(string value);
    partial void OnlibelleChanged();
    partial void OnpuChanging(System.Nullable<decimal> value);
    partial void OnpuChanged();
    #endregion
		
		public produit()
		{
			this._ligneCommande = new EntitySet<ligneCommande>(new Action<ligneCommande>(this.attach_ligneCommande), new Action<ligneCommande>(this.detach_ligneCommande));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numP", AutoSync=AutoSync.OnInsert, DbType="SmallInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public short numP
		{
			get
			{
				return this._numP;
			}
			set
			{
				if ((this._numP != value))
				{
					this.OnnumPChanging(value);
					this.SendPropertyChanging();
					this._numP = value;
					this.SendPropertyChanged("numP");
					this.OnnumPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_libelle", DbType="VarChar(30)")]
		public string libelle
		{
			get
			{
				return this._libelle;
			}
			set
			{
				if ((this._libelle != value))
				{
					this.OnlibelleChanging(value);
					this.SendPropertyChanging();
					this._libelle = value;
					this.SendPropertyChanged("libelle");
					this.OnlibelleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pu", DbType="SmallMoney")]
		public System.Nullable<decimal> pu
		{
			get
			{
				return this._pu;
			}
			set
			{
				if ((this._pu != value))
				{
					this.OnpuChanging(value);
					this.SendPropertyChanging();
					this._pu = value;
					this.SendPropertyChanged("pu");
					this.OnpuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="produit_ligneCommande", Storage="_ligneCommande", ThisKey="numP", OtherKey="numP")]
		public EntitySet<ligneCommande> ligneCommande
		{
			get
			{
				return this._ligneCommande;
			}
			set
			{
				this._ligneCommande.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ligneCommande(ligneCommande entity)
		{
			this.SendPropertyChanging();
			entity.produit = this;
		}
		
		private void detach_ligneCommande(ligneCommande entity)
		{
			this.SendPropertyChanging();
			entity.produit = null;
		}
	}
}
#pragma warning restore 1591
